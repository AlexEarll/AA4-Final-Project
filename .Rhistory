library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
print(images.links.vect)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
print(images.links.vect)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
images.links.df <- as.data.frame(images.links.vect)
View(images.links.df)
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
left_join(pokemon.names.df, images.links.df)
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
View(pokemon2)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
View(pokemon2)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
url <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
url <- c(images.links.vect, images.front)
}
shiny::runApp('Documents/INFO201/final/AA4-Final-Project')
as.vector(unlist(pokemon.data %>%
filter(pokeman == "mew") %>%
select(ability_1, ability_2)))
# Loads the appropriate libraries needed
library("shiny")
library("dplyr")
library("ggplot2")
pokemon.data <- read.csv("data/Pokemon.csv", stringsAsFactors=FALSE) %>%
select(pokemon, species_id, base_experience, type_1, type_2, attack, defense, hp, special_attack, special_defense, ability_1, ability_2, ability_hidden, url_image, generation_id) %>%
filter(generation_id == 1)
server <- function(input, output) {
output$first.poke <- renderUI({
selectInput("first.poke",
"First Pokeman:",
choices = pokemon.data$pokemon,
selected = NULL)
})
output$second.poke <- renderUI({
selectInput("second.poke",
"Second Pokeman:",
choices = pokemon.data$pokemon,
selected = NULL)
})
output$attack1 <- renderUI({
attack <- pokemon.data %>%
filter(pokeman == input$first.poke) %>%
select(ability_1, ability_2)
radioButtons("first.ability",
label = "First Pokeman's Attack",
as.vector(unlist(attack)))
})
output$attack2 <- renderUI({
attack <- pokemon.data %>%
filter(pokeman == input$second.poke) %>%
select(ability_1, ability_2)
radioButtons("second.ability",
label = "Second Pokeman's Attack",
as.vector(unlist(attack)))
})
}
as.vector(unlist(pokemon.data %>%
filter(pokeman == "mew") %>%
select(ability_1, ability_2)))
runApp('Documents/INFO201/final/AA4-Final-Project')
pokemon.data
View(pokemon.data)
pokemon.data <- read.csv("data/Pokemon.csv", stringsAsFactors=FALSE) %>%
select(pokemon, species_id, base_experience, type_1, type_2, attack, defense, hp, special_attack, special_defense, ability_1, ability_2, ability_hidden, url_image, generation_id) %>%
filter(generation_id == 1)
setwd("~/Documents/INFO201/final/AA4-Final-Project")
# Loads the appropriate libraries needed
library("shiny")
library("dplyr")
library("ggplot2")
pokemon.data <- read.csv("data/Pokemon.csv", stringsAsFactors=FALSE) %>%
select(pokemon, species_id, base_experience, type_1, type_2, attack, defense, hp, special_attack, special_defense, ability_1, ability_2, ability_hidden, url_image, generation_id) %>%
filter(generation_id == 1)
server <- function(input, output) {
output$first.poke <- renderUI({
selectInput("first.poke",
"First Pokeman:",
choices = pokemon.data$pokemon,
selected = NULL)
})
output$second.poke <- renderUI({
selectInput("second.poke",
"Second Pokeman:",
choices = pokemon.data$pokemon,
selected = NULL)
})
output$attack1 <- renderUI({
attack <- pokemon.data %>%
filter(pokeman == input$first.poke) %>%
select(ability_1, ability_2)
radioButtons("first.ability",
label = "First Pokeman's Attack",
as.vector(unlist(attack)))
})
output$attack2 <- renderUI({
attack <- pokemon.data %>%
filter(pokeman == input$second.poke) %>%
select(ability_1, ability_2)
radioButtons("second.ability",
label = "Second Pokeman's Attack",
as.vector(unlist(attack)))
})
}
as.vector(unlist(pokemon.data %>%
filter(pokeman == "mew") %>%
select(ability_1, ability_2)))
as.vector(unlist(pokemon.data %>%
filter(pokemon == "mew") %>%
select(ability_1, ability_2)))
# Loads the appropriate libraries needed
library("shiny")
library("dplyr")
library("ggplot2")
pokemon.data <- read.csv("data/Pokemon.csv", stringsAsFactors=FALSE) %>%
select(pokemon, species_id, base_experience, type_1, type_2, attack, defense, hp, special_attack, special_defense, ability_1, ability_2, ability_hidden, url_image, generation_id) %>%
filter(generation_id == 1)
server <- function(input, output) {
output$first.poke <- renderUI({
selectInput("first.poke",
"First Pokeman:",
choices = pokemon.data$pokemon,
selected = NULL)
})
output$second.poke <- renderUI({
selectInput("second.poke",
"Second Pokeman:",
choices = pokemon.data$pokemon,
selected = NULL)
})
output$attack1 <- renderUI({
attack <- pokemon.data %>%
filter(pokemon == input$first.poke) %>%
select(ability_1, ability_2)
radioButtons("first.ability",
label = "First Pokeman's Attack",
as.vector(unlist(attack)))
})
output$attack2 <- renderUI({
attack <- pokemon.data %>%
filter(pokemon == input$second.poke) %>%
select(ability_1, ability_2)
radioButtons("second.ability",
label = "Second Pokeman's Attack",
as.vector(unlist(attack)))
})
}
runApp()
runApp()
# Loads the appropriate libraries needed
library("shiny")
library("dplyr")
library("ggplot2")
pokemon.data <- read.csv("data/Pokemon.csv", stringsAsFactors=FALSE) %>%
select(pokemon, species_id, base_experience, type_1, type_2, attack, defense, hp, special_attack, special_defense, ability_1, ability_2, ability_hidden, url_image, generation_id) %>%
filter(generation_id == 1)
server <- function(input, output) {
output$first.poke <- renderUI({
selectInput("first.poke",
"First Pokeman:",
choices = pokemon.data$pokemon,
selected = NULL)
})
output$second.poke <- renderUI({
selectInput("second.poke",
"Second Pokeman:",
choices = pokemon.data$pokemon,
selected = NULL)
})
output$attack1 <- renderUI({
attack <- pokemon.data %>%
filter(pokemon == input$first.poke) %>%
select(ability_1, ability_2)
radioButtons("first.ability",
label = "First Pokeman's Attack",
as.vector(unlist(attack)))
})
output$attack2 <- renderUI({
print(input$second.poke)
attack <- pokemon.data %>%
filter(pokemon == input$second.poke) %>%
select(ability_1, ability_2)
radioButtons("second.ability",
label = "Second Pokeman's Attack",
as.vector(unlist(attack)))
})
}
runApp()
runApp()
runApp()
as.vector(unlist(pokemon.data %>%
filter(pokemon == "mew") %>%
select(ability_1, ability_2)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Documents/INFO201/final/AA4-Final-Project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
