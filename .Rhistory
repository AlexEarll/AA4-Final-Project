generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images <- function(pokemon.names.vect) {
images.links.vect <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
return(images.links.vect)
}
re <- images(pokemon.names.vect)
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images <- function(pokemon.names.vect) {
images.links.vect <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
}
re <- images(pokemon.names.vect)
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
print(images.links.vect)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
print(images.links.vect)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
images.links.df <- as.data.frame(images.links.vect)
View(images.links.df)
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
print(name)
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
left_join(pokemon.names.df, images.links.df)
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
View(pokemon2)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
images.links.vect <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
images.links.vect <- c(images.links.vect, images.front)
}
# Loads the necessary libraries
library("httr")
library("jsonlite")
library("knitr")
library("dplyr")
base.uri <- "http://pokeapi.co/"
generation.1 <- "api/v2/generation/1"
generation.2 <- "api/v2/generation/2"
uri.generation.1 <- paste0(base.uri, generation.1)
response.generation.1 <- GET(uri.generation.1)
body.1 <- fromJSON(content(response.generation.1, "text", encoding = "UTF-8"))
pokemon1 <- flatten(body.1$pokemon_species)
uri.generation.2 <- paste0(base.uri, generation.2)
response.generation.2 <- GET(uri.generation.2)
body.2 <- fromJSON(content(response.generation.2, "text", encoding = "UTF-8"))
pokemon2 <- flatten(body.2$pokemon_species)
View(pokemon2)
pokemon1.vector <- as.vector(unlist(pokemon1$name))
pokemon2.vector <- as.vector(unlist(pokemon2$name))
pokemon.names.vect <- c(pokemon1.vector, pokemon2.vector)
pokemon.names.df <- as.data.frame(pokemon.names)
url <- vector()
for (name in pokemon.names.vect) {
images <- "api/v2/pokemon/"
uri.images <- paste0(base.uri, images, name)
response <- GET(uri.images)
body <- fromJSON(content(response, "text", encoding = "UTF-8"))
images.front <- body$sprites$front_default
url <- c(images.links.vect, images.front)
}
shiny::runApp('Documents/INFO201/final/AA4-Final-Project')
shiny::runApp('Documents/INFO201/final/AA4-Final-Project')
runApp('Documents/INFO201/final/AA4-Final-Project')
runApp('Documents/INFO201/final/AA4-Final-Project')
runApp('Documents/INFO201/final/AA4-Final-Project')
setwd("~/Documents/INFO201/final/AA4-Final-Project")
runApp()
View(pokemon.data)
# Loads the appropriate libraries needed
library("shiny")
library("dplyr")
library("ggplot2")
pokemon.data <- read.csv("data/Pokemon-2.csv", stringsAsFactors=FALSE)
server <- function(input, output, clientData, session) {
# Outputs the value of the first pokemon chosen
# Then outputs interactive stat options for pokemon one
output$first.poke <- renderUI({
selectInput("first.poke",
"First Pokemon:",
choices = c(Choose = "", pokemon.data$pokemon),
selected = NULL)
})
output$hp.one <- renderUI({
numericInput("hp.one",
"Pokemon HP:",
min = 1, max = 20, value = 5, step = 0.5)
})
output$attack.one <- renderUI({
numericInput("attack.one",
"Pokemon Attack:",
min = 1, max = 20, value = 5, step = 0.5)
})
output$defense.one <- renderUI({
numericInput("defense.one",
"Pokemon Defense:",
min = 1, max = 20, value = 5, step = 0.5)
})
output$type.one <- renderUI({
selectInput("type.one",
label = "Pokemon Type:",
choices = c(Type = "", "VARIABLE TYPES"),
selected = "")
})
# Outputs the value of the second pokemon chosen
# Then outputs interactive stat options for pokemon two
output$second.poke <- renderUI({
selectInput("second.poke",
"Second Pokemon:",
choices = c(Choose = "", pokemon.data$pokemon),
selected = NULL)
})
output$hp.two <- renderUI({
numericInput("hp.two",
"Pokemon HP:",
min = 1, max = 20, value = 5, step = 0.5)
})
output$attack.two <- renderUI({
numericInput("attack.two",
"Pokemon Attack:",
min = 1, max = 20, value = 5, step = 0.5)
})
output$defense.two <- renderUI({
numericInput("defense.two",
"Pokemon Defense:",
min = 1, max = 20, value = 5, step = 0.5)
})
output$type.two <- renderUI({
selectInput("type.two",
label = "Pokemon Type:",
choices = c(Type = "", "VARIABLE TYPES"),
selected = "")
})
# Takes in the input of each pokemon, and updates the stat labels to match for both pokemon chose
observe({
poke.one <- input$first.poke
poke.two <- input$second.poke
# Change both the label and the text of Pokemon ONE stat labels
updateTextInput(session, "hp.one",
label = paste(poke.one, "HP:")
)
updateTextInput(session, "attack.one",
label = paste(poke.one, "Attack:")
)
updateTextInput(session, "defense.one",
label = paste(poke.one, "Defense:")
)
updateTextInput(session, "type.one",
label = paste(poke.one, "Type:")
)
# Change both the label and the text of Pokemon TWO stat labels
updateTextInput(session, "hp.two",
label = paste(poke.two, "HP:")
)
updateTextInput(session, "attack.two",
label = paste(poke.two, "Attack:")
)
updateTextInput(session, "defense.two",
label = paste(poke.two, "Defense:")
)
updateTextInput(session, "type.two",
label = paste(poke.two, "Type:")
)
})
}
View(pokemon.data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
